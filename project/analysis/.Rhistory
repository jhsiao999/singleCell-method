cell_cycle_genes <- read.table("../data/cellcyclegenes.txt", header = TRUE, sep="\t")
dim(cell_cycle_genes)
cell_cycle_genes <- read.table("../data/cellcyclegenes.txt", header = TRUE, sep="\t")
cell_cycle_genes_list <- lapply(1:5,function(x){
temp <- as.character(cell_cycle_genes[,x])
temp[temp!=""]
})
labs <- unique(unlist(lapply(1:5, function(k) X =
match(cell_cycle_genes_list[[k]],
rownames(data)))) )
labs
cell_cycle_genes_list[[1]]
rownames(data)
strsplit(gene_names[1],".")
gene_names[1]
gene_names <- rownames(data);
gene_names[1]
strsplit(gene_names[1],".")
strsplit(gene_names[1],"\.")
strsplit(gene_names[1],"/.")
strsplit(gene_names[1]," .")
strsplit(gene_names[1],"[.]")
strsplit(gene_names[1],"[.]")[[1]][1]
lapply(gene_names,function(x) strsplit(x,"[.]")[[1]][1])
unlist(lapply(gene_names,function(x) strsplit(x,"[.]")[[1]][1]))
gene_names
unlist(lapply(gene_names,function(x) strsplit(x,"[.]")[[1]][1]))
setwd("/Users/kushal/Documents/singleCell-method/project/analysis/")
data <- read.table("../data/Monocle data/GSE52529_fpkm_matrix.txt")
gene_names <- rownames(data);
gene_names <- unlist(lapply(gene_names,function(x) strsplit(x,"[.]")[[1]][1]))
cycle_counts_data <- t(data);
dim(cycle_counts_data)
cell_cycle_genes <- read.table("../data/cellcyclegenes.txt", header = TRUE, sep="\t")
cell_cycle_genes_list <- lapply(1:5,function(x){
temp <- as.character(cell_cycle_genes[,x])
temp[temp!=""]
})
labs <- unique(unlist(lapply(1:5, function(k) X =
match(cell_cycle_genes_list[[k]],
rownames(data)))) )
labs
labs <- unique(unlist(lapply(1:5, function(k) X =
match(cell_cycle_genes_list[[k]],
gene_names))))
labs
dim(cycle_counts_data)
labs <- labs[!is.na(labs)];
cycle_counts_data <- cycle_counts_data[,labs]
dim(cycle_counts_data)
cycle_voom_data <- voom(cycle_counts_data)$E;
cycle_data_norm <- apply(cycle_voom_data,2,function(x)  return (x-mean(x))/sd(x))
celltime_levels <- 100;
cycle_data_norm <- cycle_data_norm[, -which(colSums(cycle_data_norm)==0)]
dim(cycle_data_norm)
out <- cell_ordering_class(cycle_data_norm, celltime_levels = 100, num_iter=100, save_path="../rdas/cell_order_monocle.rda")
library(qtlcharts)
library(CountClust)
library(parallel)
library(cellcycleR)
library(data.table)
library(binhf)
library(vioplot)
out <- cell_ordering_class(cycle_data_norm, celltime_levels = 100, num_iter=100, save_path="../rdas/cell_order_monocle.rda")
out <- get(load(file="../rdas/cell_order_monocle.rda"));
cell_order_full <- cell_ordering_full(out$signal_intensity, dim(cycle_data_norm)[2])
amp_genes <- out$amp;
sd_genes <- out$sigma;
phi_genes <- out$phi;
plot(density(phi_genes), col="red", main="Density plot of the phases")
plot(density(amp_genes[-which.max(amp_genes)]), col="red", main="Density plot of the amplitudes")
plot(density(sd_genes[-which.max(sd_genes)]), col="red", main="Density plot of the non-signal sd")
ESS <- amp_genes^2; RSS <- sd_genes^2
SNR <- ESS/RSS;
plot(SNR, col="red", pch=20, lwd=1)
top_genes <- which(SNR > 3);
iplotCurves(t(cycle_data_norm[order(cell_order_full),top_genes]))
getwd()
data_dir <- "../data/Marioni_data"
G1_single <- data.frame( fread( file.path(data_dir, "/G1_singlecells_counts.txt"), row.names=1) );
data_dir <- "../data/Marioni_data"
G1_single <- data.frame( fread( file.path(data_dir, "/G1_singlecells_counts.txt"), row.names=1) );
library(qtlcharts)
library(CountClust)
library(parallel)
library(cellcycleR)
library(data.table)
library(binhf)
library(vioplot)
library(limma)
library(readxl)
require(devtools)
install_github("kkdey/cellcycleR")
library(data.table)
library(binhf)
install.packages("binhf")
install.packages("readxl")
install.packages("vioplot")
library(qtlcharts)
library(CountClust)
library(parallel)
library(cellcycleR)
library(data.table)
library(binhf)
library(vioplot)
library(limma)
library(readxl)
molecules_filter <- read.table("../data/molecules-filter.txt",
header = TRUE, quote = FALSE)
molecules_filter <- read.table("../data/molecules-filter.txt",
header = TRUE, sep = "\t")
head(molecules_filter[1:2, 1:5])
molecules_filter <- read.table("../data/molecules-filter.txt",
header = TRUE, sep = "\t",
row.names = TRUE)
head(molecules_filter[1:2, 1:5])
molecules_filter <- read.table("../data/molecules-filter.txt",
header = TRUE, sep = "\t",
rownames = TRUE)
head(molecules_filter[1:2, 1:5])
?read.table
molecules_filter <- read.table("../data/molecules-filter.txt",
header = TRUE, sep = "\t",
rownames = 1)
head(molecules_filter[1:2, 1:5])
molecules_filter <- read.table("../data/molecules-filter.txt",
header = TRUE, sep = "\t",
stringsAsFactors = FALSE,
row.names = 1)
head(molecules_filter[1:2, 1:5])
annotation_filter <- read.table("../data/annotation-filter.txt",
header = TRUE, sep = "\t",
stringsAsFactors = FALSE,
row.names = 1)
annotation_filter <- read.table("../data/annotation-filter.txt",
header = TRUE, sep = "\t",
stringsAsFactors = FALSE)
head(annotation_filter[1:2, 1;5])
head(annotation_filter[1:2, 1:5])
head(annotation_filter)
stopifnot(NCOL(molecules_filter) == NROW(annotation_filter))
molecules_ercc <- molecules_filter[ grep("ERCC", rownames(molecules_filter))]
molecules_ercc <- molecules_filter[ grep("ERCC", rownames(molecules_filter)), ]
molecules_ercc
library(testit)
?prcomp
pca_ercc <- prcomp(t(molecules_ercc), retx = TRUE, center = TRUE, scale. = TRUE )
plot(pca_ercc$x[,1], pca_ercc$x[,2])
dim(pca_ercc$x)
library(ggplot2)
ggplot(data.frame(x = pca_ercc$x[,1],
y = pca_ercc$x[,2]),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual)) +
geom_point()
library(ggplot2)
ggplot(data.frame(x = pca_ercc$x[,1],
y = pca_ercc$x[,2],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point()
library(ggplot2)
ggplot(data.frame(x = pca_ercc$x[,1],
y = pca_ercc$x[,2],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC1") + ylab("PC2")
?grid.arrange
library(gridExtra)
?grid.arrange
library(gridExtra)
marrangeGrob(ggplot(data.frame(x = pca_ercc$x[,1],
y = pca_ercc$x[,2],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC1") + ylab("PC2"), nrow = 2, ncol = 2)
grid.arrange(ggplot(data.frame(x = pca_ercc$x[,1],
y = pca_ercc$x[,2],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC1") + ylab("PC2"), nrow = 2, ncol = 2)
library(ggplot2)
library(gridExtra)
grid.arrange(list(p1 = ggplot(data.frame(x = pca_ercc$x[,1],
y = pca_ercc$x[,2],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC1") + ylab("PC2"),
p2 = ggplot(data.frame(x = pca_ercc$x[,1],
y = pca_ercc$x[,3],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC1") + ylab("PC3"),
p3 = ggplot(data.frame(x = pca_ercc$x[,2],
y = pca_ercc$x[,3],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC2") + ylab("PC3") ),
nrow = 2, ncol = 2)
library(ggplot2)
library(gridExtra)
grid.arrange(ggplot(data.frame(x = pca_ercc$x[,1],
y = pca_ercc$x[,2],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC1") + ylab("PC2"),
ggplot(data.frame(x = pca_ercc$x[,1],
y = pca_ercc$x[,3],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC1") + ylab("PC3"),
ggplot(data.frame(x = pca_ercc$x[,2],
y = pca_ercc$x[,3],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC2") + ylab("PC3"),
nrow = 2, ncol = 2)
library(ggplot2)
library(gridExtra)
grid.arrange(ggplot(data.frame(x = pca_ercc$x[,1],
y = pca_ercc$x[,2],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC1") + ylab("PC2"),
ggplot(data.frame(x = pca_ercc$x[,2],
y = pca_ercc$x[,3],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC2") + ylab("PC3"),
ggplot(data.frame(x = pca_ercc$x[,1],
y = pca_ercc$x[,3],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC1") + ylab("PC3"),
nrow = 2, ncol = 2)
ggplot(data.frame(pc1 = pca_ercc$x[, 1],
ercc_total_counts = colSums(molecules_ercc),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = pc1, y = ercc_total_counts,
color = individual,
shape = replicate)) +
geom_point()
molecules_cpm_ercc <- read.table("../data/molecules-cpm-ercc.txt",
header = TRUE, sep = "\t",
stringsAsFactors = FALSE,
row.names = 1)
head(molecules_cpm_ercc[1:2, 1:5])
library(testit)
pca_ercc_cpm <- prcomp(t(molecules_cpm_ercc), retx = TRUE,
center = TRUE, scale. = TRUE )
library(ggplot2)
library(gridExtra)
library(ggplot2)
library(gridExtra)
grid.arrange(ggplot(data.frame(x = pca_ercc_cpm$x[,1],
y = pca_ercc_cpm$x[,2],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC1") + ylab("PC2"),
ggplot(data.frame(x = pca_ercc_cpm$x[,2],
y = pca_ercc_cpm$x[,3],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC2") + ylab("PC3"),
ggplot(data.frame(x = pca_ercc_cpm$x[,1],
y = pca_ercc_cpm$x[,3],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC1") + ylab("PC3"),
nrow = 2, ncol = 2)
ggplot(data.frame(pc1 = pca_ercc_cpm$x[, 1],
ercc_total_counts = colSums(molecules_cpm),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = pc1, y = ercc_total_counts,
color = individual,
shape = replicate)) +
geom_point()
ggplot(data.frame(pc1 = pca_ercc_cpm$x[, 1],
ercc_total_counts = colSums(molecules_ercc),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = pc1, y = ercc_total_counts,
color = individual,
shape = replicate)) +
geom_point()
library(testit)
pca_ercc_cpm <- prcomp(t(molecules_cpm_ercc), retx = TRUE,
center = TRUE, scale. = TRUE )
library(ggplot2)
library(gridExtra)
grid.arrange(ggplot(data.frame(x = pca_ercc_cpm$x[,1],
y = pca_ercc_cpm$x[,2],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC1") + ylab("PC2"),
ggplot(data.frame(x = pca_ercc_cpm$x[,2],
y = pca_ercc_cpm$x[,3],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC2") + ylab("PC3"),
ggplot(data.frame(x = pca_ercc_cpm$x[,1],
y = pca_ercc_cpm$x[,3],
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = x, y = y, color = individual) ) +
geom_point() +
xlab("PC1") + ylab("PC3"),
nrow = 2, ncol = 2)
ggplot(data.frame(pc1 = pca_ercc_cpm$x[, 1],
ercc_total_counts = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = pc1, y = ercc_total_counts,
color = individual,
shape = replicate)) +
geom_point()
ggplot(data.frame(pc1 = pca_ercc$x[, 1],
ercc_total_counts = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = pc1, y = ercc_total_counts,
color = individual,
shape = replicate)) +
geom_point()
ggplot(data.frame(total_count = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch),
aes(factor(annotation_filter$batch)) ) +
geom_boxplot()
ggplot(data.frame(total_count = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch),
aes(factor(annotation_filter$batch)) ) +
geom_bar()
ggplot(data.frame(total_count = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch),
aes(factor(annotation_filter$batch),
colour = factor(individual)) ) +
geom_bar()
ggplot(data.frame(total_count = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch),
aes(factor(annotation_filter$batch),
fill = factor(individual)) ) +
geom_bar()
ggplot(data.frame(total_count = colSums(molecules_ercc),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch),
aes(factor(annotation_filter$batch),
fill = factor(individual)) ) +
geom_bar()
ggplot(data.frame(pc1 = pca_ercc_cpm$x[, 1],
ercc_total_counts = colSums(molecules_ercc),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = pc1, y = ercc_total_counts,
color = individual,
shape = replicate)) +
geom_point()
ggplot(data.frame(pc1 = pca_ercc_cpm$x[, 1],
ercc_total_counts = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate),
aes(x = pc1, y = ercc_total_counts,
color = individual,
shape = replicate)) +
geom_point()
colSums(molecules_filter)
colSums(molecules_ercc)
colSums(molecules_filter)
ggplot(data.frame(total_count = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch,
well = annotation_filter$well),
aes(factor(well),
fill = factor(individual)) ) +
geom_bar()
ggplot(data.frame(total_count = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch,
well = annotation_filter$well),
aes(factor(individual),
fill = factor(individual)) ) +
geom_bar()
ggplot(data.frame(total_count = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch,
well = annotation_filter$well),
aes(factor(well),
fill = factor(individual)) ) +
geom_bar()
colSums(molecules_filter)
ggplot(data.frame(total_count = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch,
well = annotation_filter$well),
aes(factor(well),
fill = factor(individual)) ) +
geom_bar(stat = "identify")
ggplot(data.frame(total_count = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch,
well = annotation_filter$well),
aes(factor(well),
fill = factor(individual)) ) +
geom_bar(stat = "identity")
ggplot(data.frame(total_count = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch,
well = annotation_filter$well),
aes(x = factor(well), y = total_count,
fill = factor(individual)) ) +
geom_bar(stat = "identity")
ggplot(data.frame(total_count = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch,
well = annotation_filter$well),
aes(x = factor(well), y = total_count,
fill = factor(individual)) ) +
geom_bar(stat = "identity")
head(annotation_filter)
ggplot(data.frame(total_count = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch,
well = annotation_filter$well),
aes(x = factor(sample_id), y = total_count,
fill = factor(individual)) ) +
geom_bar(stat = "identity")
ggplot(data.frame(total_count = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch,
sample_id = annotation_filter$sample_id),
aes(x = factor(sample_id), y = total_count,
fill = factor(individual)) ) +
geom_bar(stat = "identity")
ggplot(data.frame(total_count = colSums(molecules_ercc),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch,
sample_id = annotation_filter$sample_id),
aes(x = factor(sample_id), y = total_count,
fill = factor(individual)) ) +
geom_bar(stat = "identity")
ggplot(data.frame(total_count = colSums(molecules_filter),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch,
sample_id = annotation_filter$sample_id),
aes(x = factor(sample_id), y = total_count,
fill = factor(individual)) ) +
geom_bar(stat = "identity")
ggplot(data.frame(total_count = colSums(molecules_ercc),
individual = annotation_filter$individual,
replicate = annotation_filter$replicate,
batch = annotation_filter$batch,
sample_id = annotation_filter$sample_id),
aes(x = factor(sample_id), y = total_count,
fill = factor(individual)) ) +
geom_bar(stat = "identity")
