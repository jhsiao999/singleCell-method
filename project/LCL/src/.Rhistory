library(readr)
lcl_data <- read_csv("../data/qc-lcl.csv");
setwd('/Users/kushal/Documents/singleCell-method/project/LCL/src')
library(readr)
lcl_data <- read_csv("../data/qc-lcl.csv");
dim(lcl_data)
lcl_data[1,]
lcl_data[1:100,]
lcl_data[1:90,]
lcl_annotations <- read.table('../data/annotation-lcl.txt');
dim(lcl_annotations)
lcl_annotations[1:10,]
lcl_molecules <- data.frame(fread('../data/molecules-lcl.txt'));
library(data.table)
lcl_molecules <- data.frame(fread('../data/molecules-lcl.txt'));
dim(lcl_molecules)
lcl_molecules[,1]
lcl_molecules[,2]
lcl_molecules <- data.frame(fread('../data/molecules-lcl.txt'), row.names = 1);
row.names(lcl_molecules)
dim(lcl_molecules)
lcl_molecules[1:5,1:5]
lcl_molecules[1,]
length(lcl_molecules[1,])
lcl_annotations[1:10]
lcl_annotations[1:10,]
lcl_annotations[1:3,]
lcl_annotations$well
lcl_annotations <- read.table('../data/annotation-lcl.txt',header=TRUE);
lcl_annotations$well
length(unique(lcl_annotations$well))
lcl_molecules <- data.frame(fread('../data/molecules-lcl.txt'), row.names = 1);
dim(lcl_molecules)
lcl_qc_data[1:5,]
lcl_qc_data <- read_csv("../data/qc-lcl.csv");
lcl_qc_data[1:5,]
lcl_qc_data$cell.num
length(l)cl_qc_data$cell.num
length(lcl_qc_data$cell.num)
lcl_qc_data[1:5,]
lcl_annotations$batch
lcl_annotations$well
match(lcl_qc_data$ll_name, lcl_annotations$well)
lcl_molecules <- t(data.frame(fread('../data/molecules-lcl.txt'), row.names = 1));
lcl_molecules_refined <- lcl_molecules[lcl_indices,];
lcl_indices <- match(lcl_qc_data$ll_name, lcl_annotations$well)
lcl_molecules_refined <- lcl_molecules[lcl_indices,];
lcl_annotations_refined <- lcl_annotations[lcl_indices];
lcl_annotations_refined <- lcl_annotations[lcl_indices,];
dim(lcl_molecules_refined)
dim(lcl_annotations_refined)
lcl_molecules_refined <- handleNA(lcl_molecules_refined)$data;
lcl_molecules_filtered <- RemoveSparseFeatures(lcl_molecules_refined,0.99)$data;
library(CountClust)
lcl_molecules_filtered <- RemoveSparseFeatures(lcl_molecules_refined,0.99)$data;
dim(lcl_molecules_filtered)
lcl_molecules_filtered <- RemoveSparseFeatures(lcl_molecules_refined,0.999)$data;
dim(lcl_molecules_filtered)
lcl_molecules_filtered <- RemoveSparseFeatures(lcl_molecules_refined,1)$data;
dim(lcl_molecules_filtered)
lcl_annotations_refined[1,]
lcl_qc_data
samp_metadata <- cbind.data.frame(lcl_annotations_refined$individual,lcl_annotations_refined$batch,lcl_qc_data$cell.num);
samp_metadata
lcl_annotations_refined$individual
lcl_annotations_refined$batch
lcl_annotations
samp_metadata <- cbind.data.frame(1:96,lcl_qc_data$cell.num);
samp_metadata
nclus_vec <- 2:5;
if(!dir.exists("Structure")) dir.create("Structure")
if(!dir.exists("Structure/batch_uncorrected")) dir.create("Structure/batch_uncorrected")
bayesfac <- array(0,length(nclus_vec));
samp_metadata <- cbind.data.frame(1:96,lcl_qc_data$cell.num);
colnames(samp_metadata) = c("samples","no. of cells");
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
obj <- StructureObj(lcl_molecules_refined,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),partition=c('FALSE','TRUE'));
}
library(maptpx)
nclus_vec <- 2:5;
if(!dir.exists("Structure")) dir.create("Structure")
if(!dir.exists("Structure/batch_uncorrected")) dir.create("Structure/batch_uncorrected")
bayesfac <- array(0,length(nclus_vec));
samp_metadata <- cbind.data.frame(1:96,lcl_qc_data$cell.num);
colnames(samp_metadata) = c("samples","no. of cells");
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
obj <- StructureObj(lcl_molecules_refined,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),partition=c('FALSE','TRUE'));
}
install_github('kkdey/CountClust')
library(devtools)
install_github('kkdey/CountClust')
install_github('kkdey/CountClust')
install_github('kkdey/CountClust')
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num])));
obj <- StructureObj(omega,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),partition=c('FALSE','TRUE'));
}
num
read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega.txt")));
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
obj <- StructureObj(omega,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),partition=c('FALSE','TRUE'));
}
dim(omega)
install_github('kkdey/CountClust')
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
obj <- StructureObj(omega,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),partition=c('FALSE','TRUE'));
}
install_github('kkdey/CountClust')
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
obj <- StructureObj(omega,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),partition=c('FALSE','TRUE'));
}
samp_metadata
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
obj <- StructureObj_omega(omega,nclus_vec[num],samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),partition=c('FALSE','TRUE'));
}
control <- list()
control.default <- list(struct.width=600, struct.height=400, cex.axis=0.5, cex.main=1.5, las=2, lwd=2,
mar.bottom =14, mar.left=2, mar.top=2, mar.right=2,color=2:(dim(omega)[2]+1));
namc=names(control)
if (!all(namc %in% names(control.default)))
stop("unknown names in control: ", namc[!(namc %in% names(control.default))])
control=modifyList(control.default, control)
control
is.list(control)
for(num in 1:length(nclus_vec))
{
if(!dir.exists(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))) dir.create(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]))
omega <- as.matrix(read.table(paste0("Structure/batch_uncorrected/clus_",nclus_vec[num],"/omega_mat.txt")));
obj <- StructureObj_omega(omega,samp_metadata = samp_metadata, tol=0.001, batch_lab = NULL, path=paste0("Structure/batch_uncorrected/clus_",nclus_vec[num]),partition=c('FALSE','TRUE'));
}
lcl_qc_data
lcl_qc_data$ll_name
lcl_qc_data$cell.number.location
